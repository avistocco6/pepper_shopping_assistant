// Generated by gencpp from file speech/RecognizeUser.msg
// DO NOT EDIT!


#ifndef SPEECH_MESSAGE_RECOGNIZEUSER_H
#define SPEECH_MESSAGE_RECOGNIZEUSER_H

#include <ros/service_traits.h>


#include <speech/RecognizeUserRequest.h>
#include <speech/RecognizeUserResponse.h>


namespace speech
{

struct RecognizeUser
{

typedef RecognizeUserRequest Request;
typedef RecognizeUserResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct RecognizeUser
} // namespace speech


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::speech::RecognizeUser > {
  static const char* value()
  {
    return "cbf1aa5e1da9fa797ed80d41970f1fe1";
  }

  static const char* value(const ::speech::RecognizeUser&) { return value(); }
};

template<>
struct DataType< ::speech::RecognizeUser > {
  static const char* value()
  {
    return "speech/RecognizeUser";
  }

  static const char* value(const ::speech::RecognizeUser&) { return value(); }
};


// service_traits::MD5Sum< ::speech::RecognizeUserRequest> should match
// service_traits::MD5Sum< ::speech::RecognizeUser >
template<>
struct MD5Sum< ::speech::RecognizeUserRequest>
{
  static const char* value()
  {
    return MD5Sum< ::speech::RecognizeUser >::value();
  }
  static const char* value(const ::speech::RecognizeUserRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::speech::RecognizeUserRequest> should match
// service_traits::DataType< ::speech::RecognizeUser >
template<>
struct DataType< ::speech::RecognizeUserRequest>
{
  static const char* value()
  {
    return DataType< ::speech::RecognizeUser >::value();
  }
  static const char* value(const ::speech::RecognizeUserRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::speech::RecognizeUserResponse> should match
// service_traits::MD5Sum< ::speech::RecognizeUser >
template<>
struct MD5Sum< ::speech::RecognizeUserResponse>
{
  static const char* value()
  {
    return MD5Sum< ::speech::RecognizeUser >::value();
  }
  static const char* value(const ::speech::RecognizeUserResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::speech::RecognizeUserResponse> should match
// service_traits::DataType< ::speech::RecognizeUser >
template<>
struct DataType< ::speech::RecognizeUserResponse>
{
  static const char* value()
  {
    return DataType< ::speech::RecognizeUser >::value();
  }
  static const char* value(const ::speech::RecognizeUserResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SPEECH_MESSAGE_RECOGNIZEUSER_H
