// Generated by gencpp from file pepper_interface/Talk.msg
// DO NOT EDIT!


#ifndef PEPPER_INTERFACE_MESSAGE_TALK_H
#define PEPPER_INTERFACE_MESSAGE_TALK_H

#include <ros/service_traits.h>


#include <pepper_interface/TalkRequest.h>
#include <pepper_interface/TalkResponse.h>


namespace pepper_interface
{

struct Talk
{

typedef TalkRequest Request;
typedef TalkResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Talk
} // namespace pepper_interface


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::pepper_interface::Talk > {
  static const char* value()
  {
    return "c87d069d1b008c590301dc7c4b90c22e";
  }

  static const char* value(const ::pepper_interface::Talk&) { return value(); }
};

template<>
struct DataType< ::pepper_interface::Talk > {
  static const char* value()
  {
    return "pepper_interface/Talk";
  }

  static const char* value(const ::pepper_interface::Talk&) { return value(); }
};


// service_traits::MD5Sum< ::pepper_interface::TalkRequest> should match
// service_traits::MD5Sum< ::pepper_interface::Talk >
template<>
struct MD5Sum< ::pepper_interface::TalkRequest>
{
  static const char* value()
  {
    return MD5Sum< ::pepper_interface::Talk >::value();
  }
  static const char* value(const ::pepper_interface::TalkRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::pepper_interface::TalkRequest> should match
// service_traits::DataType< ::pepper_interface::Talk >
template<>
struct DataType< ::pepper_interface::TalkRequest>
{
  static const char* value()
  {
    return DataType< ::pepper_interface::Talk >::value();
  }
  static const char* value(const ::pepper_interface::TalkRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::pepper_interface::TalkResponse> should match
// service_traits::MD5Sum< ::pepper_interface::Talk >
template<>
struct MD5Sum< ::pepper_interface::TalkResponse>
{
  static const char* value()
  {
    return MD5Sum< ::pepper_interface::Talk >::value();
  }
  static const char* value(const ::pepper_interface::TalkResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::pepper_interface::TalkResponse> should match
// service_traits::DataType< ::pepper_interface::Talk >
template<>
struct DataType< ::pepper_interface::TalkResponse>
{
  static const char* value()
  {
    return DataType< ::pepper_interface::Talk >::value();
  }
  static const char* value(const ::pepper_interface::TalkResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PEPPER_INTERFACE_MESSAGE_TALK_H
